1.位于TestAjax.html;
var priceInt=Number(priceStr,10);//要加第二个参数（转化为10进制），避免因为输入010（开头为0时默认为8进制）出错。
	//别用parseInt()，避免输入了 比如：43rewdsf  出错（会转为43）.
==============================================================
2。位于TestAjax.html;
<!--1. 右侧开始被隐藏可以被重现的内容:增加商品界面  
	2. 强烈建议放在最底部，避免因为加载后还没来得及隐藏时（多次刷新或者网速慢加载比较慢时）让用户看到而造成很糟的浏览体验！-->
==============================================================
3.位于TestAjax.html;
error:function(){//如果运行出现error弹窗又检查代码没有错的，可以重启一下服务器，我的tomcat是有点问题的，好像是有什么插件版本不符合。
			//alert("Error0");//获取失败或者是刷新多次时都会导致出错，为避免弹窗过多影响体验所以注释掉了。
		}	
==============================================================
4.位于TestAjax.html;
<a onclick=updateFun()>修改</a></td><td><a onclick=deleteFun("+data0.good[i].good_id+")>删除</a></td>";											
																								//onclick后面的函数是不用加引号!字符串拼接很jerk！区分拼接字符串使用的引号和字符串引号。要小心为好！例子(对好上面的+)：+"'这里插入字符串才行'"+
																								//<a onclick=deleteFun('"+   data0.good[i].good_name     +"')>删除</a>引用字符串变量
																								//<a onclick=deleteFun("+    "'这里插入字符串才行'"  		 +")>删除</a>使用字符串常量
																								//id是解析为数字的，所以引号方面不会要求那么严格									
==============================================================
5.位于TestAjax.html;
//感觉前端页面在eclipse中写会没有错误提示，所以很容易应该写错单词就什么效果都没有。。。
==============================================================
6.
result=JSON.parse(result);
//把传来的json对象(json外面无引号)转换为javascript对象，然后进行操作。这个小算法真的很有用也很神奇，类似youtube等的加载更多的功能应该也是和这个差不多的吧。																			
//对获取到的json提取数据，一次提取固定数目的数据。				
transition=transition+3;//一定要放在循环头，如果放在循环后面（可以试试，然后通过alert(i)来直观看到底发生了什么）就会在读取最后几个数据的时候会因为index超出范围后跳不出循环而无法对transition自增，从而会使得transition的大小无法改变，造成死循环。
图解(战士出征)：
出发点-------(死循环)-------------更新石--------------------------------------------------------
出发点-------更新石----(有限次循环)-------------------------------------------------------------
目标是最后一次出征都能顺利拿到更新石！ 并且每次都肯定会有循环。第一种则不能保证最后一次能拿到更新石。
战士会出征很多次，每次出征都会消耗一定体力，但是到最后的一次还没到达更新石就体力耗尽而回去，下次再来时体力因为体力有限还是到达不了更新石。导致每次都是这样，所以进入死循环（跳出循环后直接回去，出发，进入循环，在跳出循环后直接回去，出发，再进入循环，跳出后直接回去。。。）
进入循环说明符合条件（被检验复制了上一次的参数）。不再进入循环就是不符合循环条件（被检验参数已经通过更新石更新了而不再满足循环从而得到解脱）
=================================================================
7.减少类之间耦合的关键在于在写的过程中除了通过包类引入外，不要过度依赖外界，
如果要依赖尽量通过传入参数的方法依赖其他对象。
还有要注意路径，文件名字修改后要记得修改对应路径。
=================================================================
8.					
